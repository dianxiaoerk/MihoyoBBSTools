name: 米游社自动签到

on:
  schedule:
    # 每天北京时间 9:00 执行 (UTC 1:00)
    - cron: '0 1 * * *'
  workflow_dispatch:  # 允许手动触发

jobs:
  sign:
    runs-on: ubuntu-latest

    steps:
    - name: 检出代码
      uses: actions/checkout@v3

    - name: 设置 Python 环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 创建配置文件
      run: |
        mkdir -p config
        python3 << 'PYTHON_EOF'
        import os
        import yaml

        config_template = {
            'enable': True,
            'version': 15,
            'push': '',
            'account': {
                'cookie': '',
                'stuid': '',
                'stoken': '',
                'mid': ''
            },
            'device': {
                'name': 'Xiaomi MI 6',
                'model': 'Mi 6',
                'id': '',
                'fp': ''
            },
            'mihoyobbs': {
                'enable': False,
                'checkin': True,
                'checkin_list': [5, 2],
                'read': True,
                'like': True,
                'cancel_like': True,
                'share': True
            },
            'games': {
                'cn': {
                    'enable': True,
                    'useragent': 'Mozilla/5.0 (Linux; Android 12; Unspecified Device) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/103.0.5060.129 Mobile Safari/537.36',
                    'retries': 3,
                    'genshin': {'checkin': True, 'black_list': []},
                    'honkai2': {'checkin': False, 'black_list': []},
                    'honkai3rd': {'checkin': False, 'black_list': []},
                    'tears_of_themis': {'checkin': False, 'black_list': []},
                    'honkai_sr': {'checkin': True, 'black_list': []},
                    'zzz': {'checkin': False, 'black_list': []}
                },
                'os': {
                    'enable': False,
                    'cookie': '',
                    'lang': 'zh-cn',
                    'genshin': {'checkin': False, 'black_list': []},
                    'honkai3rd': {'checkin': False, 'black_list': []},
                    'tears_of_themis': {'checkin': False, 'black_list': []},
                    'honkai_sr': {'checkin': False, 'black_list': []},
                    'zzz': {'checkin': False, 'black_list': []}
                }
            },
            'cloud_games': {
                'cn': {'enable': False},
                'os': {'enable': False}
            },
            'web_activity': {
                'enable': False
            }
        }

        # 创建第一个账号的配置文件
        cookie1 = os.environ.get('COOKIE1', '')
        if cookie1:
            config1 = config_template.copy()
            config1['account']['cookie'] = cookie1
            with open('config/config.yaml', 'w', encoding='utf-8') as f:
                yaml.dump(config1, f, allow_unicode=True, sort_keys=False)
            print("已创建 config.yaml")

        # 创建其他账号的配置文件
        for i in range(2, 10):  # 支持最多9个账号
            cookie = os.environ.get(f'COOKIE{i}', '')
            if cookie:
                config_n = config_template.copy()
                config_n['account']['cookie'] = cookie
                filename = f'config/account{i}.yaml'
                with open(filename, 'w', encoding='utf-8') as f:
                    yaml.dump(config_n, f, allow_unicode=True, sort_keys=False)
                print(f"已创建 account{i}.yaml")
        PYTHON_EOF
      env:
        COOKIE1: ${{ secrets.MIYOUSHE_COOKIE }}
        COOKIE2: ${{ secrets.MIYOUSHE_COOKIE2 }}
        COOKIE3: ${{ secrets.MIYOUSHE_COOKIE3 }}
        COOKIE4: ${{ secrets.MIYOUSHE_COOKIE4 }}
        COOKIE5: ${{ secrets.MIYOUSHE_COOKIE5 }}

    - name: 创建推送配置文件
      if: ${{ env.TELEGRAM_BOT_TOKEN != '' && env.TELEGRAM_CHAT_ID != '' }}
      run: |
        cat > config/push.ini << 'EOF'
        [setting]
        enable=true
        push_server=telegram
        error_push_only=false

        [telegram]
        api_url=api.telegram.org
        bot_token=${{ secrets.TELEGRAM_BOT_TOKEN }}
        chat_id=${{ secrets.TELEGRAM_CHAT_ID }}
        EOF
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    - name: 运行签到脚本
      run: |
        python main_multi.py autorun
      env:
        TZ: Asia/Shanghai
        AutoMihoyoBBS_autorun: "1"
